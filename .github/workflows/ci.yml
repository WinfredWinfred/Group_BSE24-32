name: Full Stack CI Workflow

on:
  push:
    branches:
      - main  # or whichever branch you're working on
  pull_request:
    branches:
      - main

jobs:
  frontend:
    name: Frontend (React)
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Step 3: Install dependencies
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend  # Adjust if your React code is in a different directory

      # Step 4: Build the project
      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      # Step 5: Run tests
      - name: Run frontend tests
        run: npm test
        working-directory: ./frontend

      # Step 6: Lint code
      - name: Run ESLint
        run: npm run lint
        working-directory: ./frontend

  backend:
    name: Backend (Django)
    runs-on: ubuntu-latest

    services:
      postgres:  # Assuming you're using PostgreSQL as the DB
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mydb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/mydb

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Install backend dependencies
      - name: Install backend dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install -r ./backend/requirements.txt
        working-directory: ./backend

      # Step 4: Run database migrations
      - name: Run migrations
        run: |
          . venv/bin/activate
          python manage.py migrate
        working-directory: ./backend

      # Step 5: Run backend tests
      - name: Run backend tests
        run: |
          . venv/bin/activate
          python manage.py test
        working-directory: ./backend
